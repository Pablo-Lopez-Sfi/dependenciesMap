% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dependencies_code.R
\docType{class}
\name{Output_db-class}
\alias{Output_db-class}
\alias{Output_db}
\title{Outputs saved in the data preparation program in data base's tables}
\description{
Outputs saved in the data preparation program in data base's tables
}
\section{Fields}{

\describe{
\item{\code{conn}}{: connection of the data base}

\item{\code{data}}{: data that is going to be saved in the data base}

\item{\code{query}}{: query}

\item{\code{FUN_DB}}{: fun used in function DBConnectWrite (MyConSCDIRwrite)}

\item{\code{lastmonths}}{: parameter from function MyAppend}

\item{\code{datecolumn}}{: parameter from function Myappend}

\item{\code{FUN_DB}}{: fun used in function DBConnectWrite (MyConSCDIRwrite)}

\item{\code{table}}{: name of the data base's table used to save the data (to be added by the user)}
}}

\section{Methods}{

\describe{
\item{\code{f_DBConnectWrite(...)}}{function \code{DBConnectWrite()} from MyFunnew.R script in data preparation program (a source must be done beforehand to MyFun.R script)

                             By defaut : \code{DBConnectWrite( conn, data, table, FUN_DB, ... )}

                             \subsection{Example}{\code{LogWrite <- DBConnectWrite( SCDataBase, QVlocs, 'PAR_LOC_geoMapping', MyConSCDIRwrite )} is now replaced by

                             \code{LogWrite <- Output_db( conn = SCDatabase, data = QVlocs, table = 'PAR_LOC_geoMapping', FUN_DB = MyConSCDIRWrite, process = 'SLA' )$f_DBConnectWrite()} } }

\item{\code{f_Myappend()}}{function \code{Myappend()} from MyFunnew.R script in data preparation program (a source must be done beforehand to MyFun.R script)

                             By defaut : \code{Myappend(conn, data, table, datecolumn, lastmonths)}

                             \subsection{Example}{\code{LogWrite <- Myappend(SCDataBase, ISL, 'cal_isl', 'DATE' , (pstmnths2run+1) )} is now replaced by

                             \code{LogWrite <- Output_db( conn = SCDataBase, data = ISL, table = 'cal_isl', datecolumn = 'DATE', lastmonths = (pstmnths2run+1), process = 'ISL' )$f_Myappend()} } }

\item{\code{f_dbSendUpdate(...)}}{function \code{dbSendQuery()} from DBI package.

                             By defaut : \code{dbSendUpdate( conn, query, ...)} 

                             \subsection{Example}{\code{dbSendUpdate( SCDataBase, 'INSERT INTO sla_history SELECT * FROM slatemp' )} is now replaced by

                             \code{Output_db( conn = SCDatabase, query = 'INSERT INTO sla_history SELECT * FROM slatemp', table = 'sla_history', process = 'SLA' )$dbSendUpdate()} }}

\item{\code{f_dbWriteTable(...)}}{function \code{dbWriteTable()} from DBI package.

                              By defaut : \code{dbWriteTable( conn, table, data, ... )}

                              \subsection{Example}{\code{dbWriteTable(SCDataBase, 'PAR_LOC_geoMapping', QVlocs, row.names = FALSE, append = FALSE,overwrite = TRUE, date = TRUE, ora.number = ORANUMBER)} is now replaced by 

                             \code{Output_db( conn = SCDataBase, table = 'PAR_LOC_geoMapping', data = QVlocs, process = 'Total_Supply' )$f_dbWriteTable( row.names = FALSE, append = FALSE,overwrite = TRUE, date = TRUE, ora.number = ORANUMBER )} } }
}}

